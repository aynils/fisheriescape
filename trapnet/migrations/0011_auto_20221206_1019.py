# Generated by Django 3.2.14 on 2022-12-06 14:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('trapnet', '0010_auto_20221205_1246'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='efsample',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='efsample',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='efsample',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='efsample',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='rstsample',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='rstsample',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='rstsample',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='rstsample',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='trapnetsample',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='trapnetsample',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='trapnetsample',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='trapnetsample',
            name='updated_by',
        ),
        migrations.AlterField(
            model_name='efsample',
            name='sample',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='ef_sample', to='trapnet.sample'),
        ),
        migrations.AlterField(
            model_name='rstsample',
            name='sample',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='rst_sample', to='trapnet.sample'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='bank_length_left',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='bank length - left (m)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='bank_length_right',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='bank length - right (m)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='crew_dipnet',
            field=models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='crew (dipnet)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='crew_extras',
            field=models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='crew (extras)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='crew_probe',
            field=models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='crew (probe)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='crew_seine',
            field=models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='crew (seine)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_1_lower',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #1 - lower (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_1_middle',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #1 - middle (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_1_upper',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #1 - upper (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_2_lower',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #2 - lower (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_2_middle',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #2 - middle (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_2_upper',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #2 - upper (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_3_lower',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #3 - lower (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_3_middle',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #3 - middle (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='depth_3_upper',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='depth #3 - upper (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='discharge_m3_sec',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='discharge (m3/s)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='duty_cycle',
            field=models.IntegerField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='duty cycle (%)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='electrofisher',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='trapnet.electrofisher', verbose_name='electrofisher'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='electrofisher_frequency',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='electrofisher frequency (Hz)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='electrofisher_output_high',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='electrofisher output, high (amps)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='electrofisher_output_low',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='electrofisher output, low (amps)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='electrofisher_voltage',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='electrofisher voltage (V)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='max_depth',
            field=models.FloatField(blank=True, editable=False, help_text='max depth found within the whole site', null=True, verbose_name='max depth (cm)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='max_overhanging_veg_left',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='Max Overhanging Vegetation (m) - Left'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='max_overhanging_veg_right',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='Max Overhanging Vegetation (m) - Right'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='operating_condition',
            field=models.IntegerField(blank=True, choices=[(1, 'fully operational'), (2, 'partially operational'), (3, 'not operational')], editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='sample',
            name='operating_condition_comment',
            field=models.CharField(blank=True, editable=False, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='sample',
            name='overhanging_veg_left',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Overhanging Vegetation (%) - Left'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='overhanging_veg_right',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Overhanging Vegetation (%) - Right'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_bedrock',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='bedrock'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_boulder',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='boulder'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_cobble',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='cobble'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_fine',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='fine silt or clay'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_flat',
            field=models.IntegerField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='flat'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_gravel',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='gravel'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_pebble',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='pebble'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_pool',
            field=models.IntegerField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='pool'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_riffle',
            field=models.IntegerField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='riffle'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_rocks',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='rocks'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_run',
            field=models.IntegerField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='run'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='percent_sand',
            field=models.FloatField(blank=True, editable=False, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='sand'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='rpm_arrival',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='RPM at start'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='rpm_departure',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='RPM at end'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='samplers',
            field=models.TextField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='sample',
            name='seine_type',
            field=models.IntegerField(blank=True, choices=[(1, '1 man seine (1m wide X 1m high)'), (2, '2 man lip seine (3m wide X 1m high)')], default=2, editable=False, null=True, verbose_name='type of seine'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='site_type',
            field=models.IntegerField(blank=True, choices=[(1, 'Open'), (2, 'Closed')], editable=False, null=True, verbose_name='type of site'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='time_released',
            field=models.DateTimeField(blank=True, editable=False, null=True, verbose_name='time released'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='water_cond',
            field=models.FloatField(blank=True, editable=False, help_text='The measurement is to 1 decimal place in micro siemens (µS)', null=True, verbose_name='specific conductivity (µS)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='water_depth_m',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='water depth (m)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='water_level_delta_m',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='water level delta (m)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='water_ph',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='water acidity (pH)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='water_temp_trap_c',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='water temperature at trap (°C)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='width_lower',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='width - lower (m)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='width_middle',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='width - middle (m)'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='width_upper',
            field=models.FloatField(blank=True, editable=False, null=True, verbose_name='width - upper (m)'),
        ),
        migrations.AlterField(
            model_name='trapnetsample',
            name='sample',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='trapnet_sample', to='trapnet.sample'),
        ),
    ]
