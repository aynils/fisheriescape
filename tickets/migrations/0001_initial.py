# Generated by Django 4.1.6 on 2023-02-22 18:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tickets.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("shared_models", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="name (English)"),
                ),
                (
                    "nom",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Name (French)",
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["tag"],
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "app",
                    models.CharField(
                        blank=True,
                        default="general",
                        max_length=25,
                        null=True,
                        verbose_name="application name",
                    ),
                ),
                (
                    "request_type",
                    models.IntegerField(
                        choices=[
                            (1, "Software request / installation"),
                            (2, "System Adoption"),
                            (3, "Database creation"),
                            (4, "Data sharing / publication"),
                            (5, "Process development"),
                            (6, "Hardware"),
                            (7, "Data entry / digitization"),
                            (8, "Permissions"),
                            (9, "Database maintenance"),
                            (12, "Software issue (licensing)"),
                            (13, "Disk recovery"),
                            (14, "Hardware and software"),
                            (15, "Security exemption"),
                            (16, "App development"),
                            (17, "Report development"),
                            (18, "Other"),
                            (19, "App enhancement"),
                            (20, "Bug"),
                            (21, "Quality control element"),
                            (22, "Data transfer"),
                            (23, "New Shiny App"),
                        ],
                        default=20,
                        verbose_name="type of request",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("1", "High"),
                            ("2", "Medium"),
                            ("3", "Low"),
                            ("4", "Wish List"),
                            ("5", "Urgent"),
                        ],
                        default="2",
                        max_length=1,
                        verbose_name="priority level",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "notes_html",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                (
                    "date_opened",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_closed", models.DateTimeField(blank=True, null=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "resolved_email_date",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Notification sent to primary contact",
                    ),
                ),
                ("github_issue_number", models.IntegerField(blank=True, null=True)),
                (
                    "dm_assigned",
                    models.ManyToManyField(
                        blank=True,
                        limit_choices_to={"is_staff": True},
                        related_name="dm_assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="ticket assigned to",
                    ),
                ),
                (
                    "fiscal_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="shared_models.fiscalyear",
                    ),
                ),
                (
                    "primary_contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        default=2,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="tickets.status",
                    ),
                ),
            ],
            options={
                "ordering": ["status", "-date_modified"],
            },
        ),
        migrations.CreateModel(
            name="FollowUp",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(verbose_name="follow up message")),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("github_id", models.IntegerField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="tickets_follow_ups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follow_ups",
                        to="tickets.ticket",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_date"],
            },
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("caption", models.CharField(max_length=255)),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=tickets.models.ticket_directory_path,
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="tickets.ticket",
                    ),
                ),
            ],
            options={
                "ordering": ["-date_created"],
            },
        ),
    ]
