# Generated by Django 3.2.13 on 2022-05-02 15:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import edna.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shared_models', '0031_subjectmatter_is_csas_request_tag'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='project description')),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact name')),
                ('contact_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='contact email')),
                ('start_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='start date')),
                ('end_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='end date')),
                ('contact_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='contact DMApps user(s)')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_created_by', to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collections', to='shared_models.fiscalyear')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_collections', to='shared_models.province')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_collections', to='shared_models.region', verbose_name='DFO region')),
            ],
            options={
                'verbose_name': 'Project',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DNAExtract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extraction_number', models.CharField(blank=True, max_length=25, null=True, unique=True, verbose_name='extraction number')),
                ('start_datetime', models.DateTimeField(verbose_name='extraction date/time')),
                ('storage_location', models.CharField(blank=True, max_length=255, null=True, verbose_name='DNA storage location')),
                ('extraction_plate_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='extraction plate ID')),
                ('extraction_plate_well', models.CharField(blank=True, max_length=255, null=True, verbose_name='extraction plate well')),
                ('extraction_ipc', models.CharField(blank=True, max_length=500, null=True, verbose_name='extraction IPC')),
                ('comments', models.CharField(blank=True, max_length=1000, null=True, verbose_name='comments')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extracts', to='edna.collection', verbose_name='project')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dnaextract_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['extraction_batch', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='DNAExtractionProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FiltrationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MasterMix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name_en', models.CharField(max_length=255, verbose_name='common name (EN)')),
                ('common_name_fr', models.CharField(blank=True, max_length=255, null=True, verbose_name='common name (FR)')),
                ('scientific_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='scientific name')),
                ('tsn', models.IntegerField(blank=True, null=True, verbose_name='ITIS TSN')),
                ('aphia_id', models.IntegerField(blank=True, null=True, verbose_name='AphiaID')),
            ],
            options={
                'verbose_name_plural': 'Species',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_field_blank', models.BooleanField(default=False, verbose_name='is this a field blank?')),
                ('bottle_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='bottle ID')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='location')),
                ('site', models.CharField(blank=True, max_length=255, null=True, verbose_name='site')),
                ('station', models.TextField(blank=True, null=True, verbose_name='station')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='collection date/time')),
                ('samplers', models.CharField(blank=True, max_length=1000, null=True, verbose_name='collector name')),
                ('latitude', models.FloatField(null=True, verbose_name='latitude')),
                ('longitude', models.FloatField(null=True, verbose_name='longitude')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='edna.collection', verbose_name='project')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_samples_created_by', to=settings.AUTH_USER_MODEL)),
                ('sample_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='edna.sampletype', verbose_name='sample type')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_samples_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('bottle_id', 'collection')},
            },
        ),
        migrations.CreateModel(
            name='PCRBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date/time')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('plate_id', models.CharField(blank=True, max_length=25, null=True, verbose_name=' qPCR plate ID')),
                ('machine_number', models.CharField(blank=True, max_length=25, null=True, verbose_name=' qPCR machine number')),
                ('run_program', models.CharField(blank=True, max_length=25, null=True, verbose_name=' qPCR run program')),
                ('control_status', models.IntegerField(blank=True, choices=[(1, 'OK'), (0, 'Bad')], null=True, verbose_name='control status')),
                ('default_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='edna.collection', verbose_name='project')),
                ('operators', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='operator(s)')),
            ],
            options={
                'verbose_name_plural': 'PCR Batches',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='PCR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pcr_plate_well', models.CharField(blank=True, max_length=25, null=True, verbose_name=' qPCR plate well')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcrs', to='edna.collection', verbose_name='project')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcr_created_by', to=settings.AUTH_USER_MODEL)),
                ('extract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcrs', to='edna.dnaextract', verbose_name='extraction ID')),
                ('master_mix', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcrs', to='edna.mastermix', verbose_name='master mix')),
                ('pcr_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrs', to='edna.pcrbatch', verbose_name=' qPCR batch')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcr_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['pcr_plate_well', 'pcr_batch', 'extract__id', 'id'],
            },
        ),
        migrations.CreateModel(
            name='FiltrationBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date/time')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('default_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='edna.collection', verbose_name='project')),
                ('operators', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='operator(s)')),
            ],
            options={
                'verbose_name_plural': 'Filtration Batches',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tube_id', models.CharField(blank=True, max_length=25, null=True, verbose_name='tube ID')),
                ('start_datetime', models.DateTimeField(verbose_name='start time')),
                ('end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('filtration_volume_ml', models.FloatField(blank=True, null=True, verbose_name='volume (ml)')),
                ('storage_location', models.CharField(blank=True, max_length=1000, null=True, verbose_name='filter storage location')),
                ('filtration_ipc', models.CharField(blank=True, max_length=500, null=True, verbose_name='filtration IPC')),
                ('comments', models.CharField(blank=True, max_length=1000, null=True, verbose_name='comments')),
                ('duration_min', models.FloatField(blank=True, editable=False, null=True, verbose_name='filtration duration (min)')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='filters', to='edna.collection', verbose_name='project')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='filter_created_by', to=settings.AUTH_USER_MODEL)),
                ('filtration_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='edna.filtrationbatch', verbose_name='filtration batch')),
                ('filtration_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='filters', to='edna.filtrationtype', verbose_name='filtration type')),
                ('sample', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='filters', to='edna.sample', verbose_name='sample ID')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='filter_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['filtration_batch', 'order'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to=edna.models.file_directory_path)),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('collection', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='edna.collection')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='ExtractionBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date/time')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('default_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='edna.collection', verbose_name='project')),
                ('operators', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='operator(s)')),
            ],
            options={
                'verbose_name_plural': 'DNA Extraction Batches',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='ednaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='app administrator?')),
                ('is_crud_user', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='CRUD permissions?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='edna_user', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'ordering': ['-is_admin', 'user__first_name'],
            },
        ),
        migrations.AddField(
            model_name='dnaextract',
            name='dna_extraction_protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='edna.dnaextractionprotocol', verbose_name='extraction protocol'),
        ),
        migrations.AddField(
            model_name='dnaextract',
            name='extraction_batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracts', to='edna.extractionbatch', verbose_name='extraction batch'),
        ),
        migrations.AddField(
            model_name='dnaextract',
            name='filter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extracts', to='edna.filter', verbose_name='filter ID'),
        ),
        migrations.AddField(
            model_name='dnaextract',
            name='sample',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extracts', to='edna.sample', verbose_name='sample ID'),
        ),
        migrations.AddField(
            model_name='dnaextract',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dnaextract_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='tags',
            field=models.ManyToManyField(blank=True, to='edna.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='collection',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alias', models.CharField(help_text='This is the name that will be used to reference this assay on import spreadsheets.', max_length=50, verbose_name='target name / alias')),
                ('lod', models.FloatField(blank=True, null=True, verbose_name='LOD value')),
                ('loq', models.FloatField(blank=True, null=True, verbose_name='LOQ value')),
                ('units', models.CharField(blank=True, max_length=150, null=True, verbose_name='Units for LOQ and LOD')),
                ('a_coef', models.FloatField(blank=True, null=True, verbose_name='formula A coefficient')),
                ('b_coef', models.FloatField(blank=True, null=True, verbose_name='formula B coefficient')),
                ('is_ipc', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='is this assay being used as an IPC?')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assay_created_by', to=settings.AUTH_USER_MODEL)),
                ('species', models.ManyToManyField(blank=True, to='edna.Species', verbose_name='species')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assay_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Assays',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PCRAssay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('threshold', models.FloatField(blank=True, null=True, verbose_name='threshold')),
                ('ct', models.FloatField(blank=True, null=True, verbose_name='Ct')),
                ('is_undetermined', models.BooleanField(default=False, verbose_name='Undetermined?')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('result', models.IntegerField(choices=[(8, 'in progress'), (1, 'positive'), (0, 'negative'), (90, 'no assay :('), (91, 'LOD missing :(')], default=8, editable=False, verbose_name='result')),
                ('edna_conc', models.FloatField(blank=True, editable=False, null=True, verbose_name=' eDNA concentration (Pg/L)')),
                ('assay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcrs', to='edna.assay', verbose_name='assay')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcrassay_created_by', to=settings.AUTH_USER_MODEL)),
                ('pcr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assays', to='edna.pcr', verbose_name='PCR')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pcrassay_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['pcr', 'assay'],
                'unique_together': {('pcr', 'assay')},
            },
        ),
    ]
