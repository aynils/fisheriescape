# Generated by Django 3.2.15 on 2023-01-12 04:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shared_models', '0035_auto_20221207_1558'),
    ]

    operations = [
        migrations.CreateModel(
            name='Acronym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym_id', models.IntegerField(null=True)),
                ('acronym_letters', models.CharField(max_length=25, null=True)),
                ('acronym_full_name', models.CharField(max_length=255)),
                ('acronym_topic', models.CharField(blank=True, max_length=100, null=True)),
                ('acronym_url', models.URLField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, null=True, unique=True, verbose_name='UUID')),
                ('inventory_id', models.IntegerField(null=True, verbose_name='Inventory ID')),
                ('approved_by', models.CharField(max_length=50, null=True, verbose_name='Approved By')),
                ('data_asset_name', models.CharField(max_length=125, null=True, verbose_name='Data Asset Name')),
                ('data_asset_steward', models.CharField(max_length=50, null=True, verbose_name='Data Asset Steward')),
                ('data_asset_sorting_category', models.IntegerField(blank=True, null=True, verbose_name='Data Asset Sorting Category')),
                ('operational_or_analytical_data', models.CharField(max_length=15, null=True, verbose_name='Operational Or Analytical Data')),
                ('data_asset_acronym', models.CharField(max_length=15, null=True, verbose_name='Data Asset Acronym')),
                ('data_asset_description', models.TextField(blank=True, null=True, verbose_name='Data Asset Description')),
                ('apm_id', models.IntegerField(blank=True, null=True, verbose_name='apm_id')),
                ('non_salmon_data', models.CharField(max_length=5, null=True, verbose_name='Non Salmon Data')),
                ('data_asset_status', models.CharField(max_length=25, null=True, verbose_name='Data Asset Status')),
                ('data_asset_format', models.CharField(max_length=50, null=True, verbose_name='Data Asset Format')),
                ('data_type', models.CharField(max_length=15, null=True, verbose_name='Data Type')),
                ('data_asset_location', models.CharField(max_length=25, null=True, verbose_name='Data Asset Location')),
                ('data_asset_trustee', models.CharField(max_length=50, null=True, verbose_name='Data Asset Trustee')),
                ('data_asset_custodian', models.CharField(max_length=50, null=True, verbose_name='Data Asset Custodian')),
                ('application_data_asset_is_associated_with', models.TextField(blank=True, null=True, verbose_name='Application Data Asset is Associated With')),
                ('application_description', models.TextField(blank=True, null=True, verbose_name='Application Description')),
                ('technical_documentation', models.TextField(blank=True, null=True, verbose_name='Technical Documentation')),
                ('access_point', models.TextField(blank=True, null=True, verbose_name='Access Point')),
                ('policy_levers_data_asset_supports', models.CharField(max_length=25, null=True, verbose_name='Policy Levers Data Asset Supports')),
                ('key_decisions', models.TextField(blank=True, null=True, verbose_name='Key Decisions')),
                ('impact_to_dfo_data_consumers', models.CharField(max_length=125, null=True, verbose_name='Impact to DFO Data Consumers')),
                ('decision_supporting_key_products', models.TextField(blank=True, null=True, verbose_name='Decision Supporting Key Products')),
                ('impact_on_decision_making', models.CharField(max_length=10, null=True, verbose_name='Impact on Decision Making')),
                ('uniqueness', models.CharField(max_length=5, null=True, verbose_name='Uniqueness')),
                ('cost', models.TextField(blank=True, null=True, verbose_name='Cost')),
                ('data_asset_size', models.TextField(blank=True, null=True, verbose_name='Data Asset Size')),
                ('update_frequency', models.CharField(max_length=25, null=True, verbose_name='Update Frequency')),
                ('data_standards', models.CharField(max_length=50, null=True, verbose_name='Data Standards')),
                ('metadata_maturity', models.CharField(max_length=5, null=True, verbose_name='Metadata Maturity')),
                ('data_quality_rating', models.CharField(max_length=15, null=True, verbose_name='Data Quality Rating')),
                ('naming_conventions', models.CharField(max_length=15, null=True, verbose_name='Naming Conventions')),
                ('security_classification', models.CharField(max_length=15, null=True, verbose_name='Security Classification')),
                ('inbound_data_linkage', models.TextField(blank=True, null=True, verbose_name='Inbound Data Linkage')),
                ('outbound_data_linkage', models.TextField(blank=True, null=True, verbose_name='Outbound Data Linkage')),
                ('publication_status', models.TextField(blank=True, null=True, verbose_name='Publication Status')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.IntegerField()),
                ('tag_name', models.CharField(max_length=25)),
                ('primary_tag_id', models.IntegerField(blank=True, null=True)),
                ('inventory_id', models.ManyToManyField(related_name='topic', to='pssi.DataAsset', verbose_name='Topic')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='national administrator?')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pssiDataAsset_users', to='shared_models.region', verbose_name='regional administrator?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pssiDataAsset_user', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'ordering': ['-is_admin', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='DataGlossary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_glossary_id', models.IntegerField()),
                ('term_name', models.CharField(max_length=25)),
                ('term_description', models.TextField()),
                ('inventory_id', models.ManyToManyField(to='pssi.DataAsset')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_id', models.IntegerField()),
                ('comment_creator', models.CharField(max_length=25, null=True)),
                ('comment_contact_info', models.CharField(max_length=50, null=True)),
                ('comment_subject', models.CharField(max_length=50)),
                ('comment_contents', models.TextField()),
                ('inventory_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pssi.dataasset')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessGlossary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_glossary_id', models.IntegerField()),
                ('term_name', models.CharField(max_length=25)),
                ('term_description', models.TextField()),
                ('inventory_id', models.ManyToManyField(to='pssi.DataAsset')),
            ],
        ),
    ]
