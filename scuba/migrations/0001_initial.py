# Generated by Django 3.2.5 on 2021-12-08 11:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shared_models', '0030_remove_river_fishing_area_code'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_descent', models.DateTimeField(blank=True, null=True, verbose_name='start descent')),
                ('bottom_time', models.FloatField(blank=True, null=True, verbose_name='bottom time (min)')),
                ('max_depth_ft', models.FloatField(blank=True, null=True, verbose_name='max depth (ft)')),
                ('psi_in', models.IntegerField(blank=True, null=True, verbose_name='PSI in')),
                ('psi_out', models.IntegerField(blank=True, null=True, verbose_name='PSI out')),
                ('heading', models.CharField(blank=True, choices=[('n', 'North'), ('ne', 'Northeast'), ('e', 'East'), ('se', 'Southeast'), ('s', 'South'), ('sw', 'Southwest'), ('w', 'West'), ('nw', 'Northwest')], max_length=2, null=True, verbose_name='heading')),
                ('side', models.CharField(blank=True, choices=[('l', 'Left'), ('r', 'Right')], max_length=1, null=True, verbose_name='side')),
                ('width_m', models.FloatField(blank=True, null=True, verbose_name='width (m)')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('was_seeded', models.BooleanField(default=False, editable=False, verbose_name='was seeded (Martin Mallet)?')),
                ('is_training', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Was this a training dive?')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dive_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['sample', 'diver'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
                ('abbreviation', models.CharField(blank=True, max_length=255, null=True, verbose_name='abbreviation')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scuba_regions', to='shared_models.province')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('scientific_name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('aphia_id', models.IntegerField(verbose_name='WoRMS AphiaID')),
                ('is_default', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'verbose_name_plural': 'species',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Transect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
                ('start_latitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='start latitude')),
                ('start_latitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='start latitude (minutes)')),
                ('start_longitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='start longitude')),
                ('start_longitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='start longitude (minutes)')),
                ('end_latitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='end latitude')),
                ('end_latitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='end latitude (minutes)')),
                ('end_longitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='end longitude')),
                ('end_longitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='end longitude (minutes)')),
                ('start_latitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='start latitude (decimal degrees)')),
                ('start_longitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='start longitude (decimal degrees)')),
                ('end_latitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='end latitude (decimal degrees)')),
                ('end_longitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='end longitude (decimal degrees)')),
                ('name', models.IntegerField(verbose_name='name')),
                ('old_name', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='old name')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='transects', to='scuba.region', verbose_name='region')),
            ],
            options={
                'ordering': ['region', 'name'],
                'unique_together': {('name', 'region')},
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interval', models.IntegerField(choices=[(1, '1 (0-5m)'), (2, '2 (5-10m)'), (3, '3 (10-15m)'), (4, '4 (15-20m)'), (5, '5 (20-25m)'), (6, '6 (25-30m)'), (7, '7 (30-35m)'), (8, '8 (35-40m)'), (9, '9 (40-45m)'), (10, '10 (45-50m)'), (11, '11 (50-55m)'), (12, '12 (55-60m)'), (13, '13 (60-65m)'), (14, '14 (65-70m)'), (15, '15 (70-75m)'), (16, '16 (75-80m)'), (17, '17 (80-85m)'), (18, '18 (85-90m)'), (19, '19 (90-95m)'), (20, '20 (95-100m)')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='5m interval [1-20]')),
                ('depth_ft', models.FloatField(blank=True, null=True, verbose_name='depth (ft)')),
                ('percent_algae', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='algae [0-1]')),
                ('percent_sand', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='sand [0-1]')),
                ('percent_mud', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='mud [0-1]')),
                ('percent_hard', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='hard [0-1]')),
                ('percent_gravel', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='gravel [0-1]')),
                ('percent_cobble', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='cobble [0-1]')),
                ('percent_pebble', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='pebble [0-1]')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='section_created_by', to=settings.AUTH_USER_MODEL)),
                ('dive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='scuba.dive', verbose_name='dive')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='section_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['interval'],
                'unique_together': {('dive', 'interval')},
            },
        ),
        migrations.CreateModel(
            name='ScubaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='app administrator?')),
                ('is_crud_user', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='CRUD permissions?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scuba_user', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'ordering': ['-is_admin', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_latitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='start latitude')),
                ('start_latitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='start latitude (minutes)')),
                ('start_longitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='start longitude')),
                ('start_longitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='start longitude (minutes)')),
                ('end_latitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='end latitude')),
                ('end_latitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='end latitude (minutes)')),
                ('end_longitude_d', models.IntegerField(blank=True, help_text='Degrees (DD)', null=True, verbose_name='end longitude')),
                ('end_longitude_mm', models.FloatField(blank=True, help_text='Minutes (MM.mmmmm)', null=True, verbose_name='end longitude (minutes)')),
                ('start_latitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='start latitude (decimal degrees)')),
                ('start_longitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='start longitude (decimal degrees)')),
                ('end_latitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='end latitude (decimal degrees)')),
                ('end_longitude', models.FloatField(blank=True, editable=False, null=True, verbose_name='end longitude (decimal degrees)')),
                ('datetime', models.DateTimeField(verbose_name='date')),
                ('weather_notes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='weather notes')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('is_upm', models.BooleanField(default=False, verbose_name='was this a UPM sampling day?')),
                ('is_training', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Was this outing for training purposes?')),
                ('transect', models.ForeignKey(blank=True, help_text='Leave blank if training', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='scuba.transect', verbose_name='transect')),
            ],
            options={
                'verbose_name': 'outing',
                'ordering': ['-datetime', 'transect'],
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('carapace_length_mm', models.FloatField(blank=True, null=True, verbose_name='carapace length (mm)')),
                ('sex', models.CharField(choices=[('u', '0 - unknown'), ('m', '1 - male'), ('f', '2 - female')], max_length=2, verbose_name='sex')),
                ('egg_status', models.CharField(blank=True, choices=[('0', '0 - no eggs'), ('b', 'b - berried'), ('b1', 'b1 - berried with new eggs'), ('b2', 'b2 - berried with black eggs'), ('b3', 'b3 - berried with developed eggs')], max_length=2, null=True, verbose_name='egg status')),
                ('certainty_rating', models.IntegerField(choices=[(1, '1 - certain'), (0, '0 - uncertain')], default=1, verbose_name='length certainty')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scuba_obs_created_by', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='scuba.section', verbose_name='section')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='scuba.species', verbose_name='species')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scuba_obs_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='last name')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'unique_together': {('first_name', 'last_name')},
            },
        ),
        migrations.AddField(
            model_name='dive',
            name='diver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dives', to='scuba.diver', verbose_name='diver'),
        ),
        migrations.AddField(
            model_name='dive',
            name='sample',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='dives', to='scuba.sample', verbose_name='sample'),
        ),
        migrations.AddField(
            model_name='dive',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dive_updated_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
