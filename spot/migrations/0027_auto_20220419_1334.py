# Generated by Django 3.1.2 on 2022-04-19 20:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('spot', '0026_auto_20220327_2040'),
    ]

    operations = [
        migrations.CreateModel(
            name='EcosystemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HatcheryName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManagementArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonitoringApproach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='river',
            old_name='area',
            new_name='sub_district_area',
        ),
        migrations.RemoveField(
            model_name='data',
            name='barrier_data_check_entry',
        ),
        migrations.RemoveField(
            model_name='data',
            name='data_communication',
        ),
        migrations.RemoveField(
            model_name='data',
            name='data_programs',
        ),
        migrations.RemoveField(
            model_name='data',
            name='data_quality_person',
        ),
        migrations.RemoveField(
            model_name='data',
            name='species',
        ),
        migrations.RemoveField(
            model_name='objective',
            name='species',
        ),
        migrations.RemoveField(
            model_name='project',
            name='DFO_aboriginal_AAA',
        ),
        migrations.RemoveField(
            model_name='project',
            name='first_nations_contact',
        ),
        migrations.RemoveField(
            model_name='project',
            name='first_nations_contact_role',
        ),
        migrations.RemoveField(
            model_name='sampleoutcome',
            name='outcome_report_delivered',
        ),
        migrations.AddField(
            model_name='method',
            name='unique_method_number',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Unique Method Number'),
        ),
        migrations.AddField(
            model_name='methoddocument',
            name='unique_method_number',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Unique Method Number'),
        ),
        migrations.AddField(
            model_name='project',
            name='DFO_AAA',
            field=models.ManyToManyField(blank=True, related_name='DFO_aboriginal_AAA', to='spot.Person', verbose_name='DFO Aboriginal Affairs Advisor'),
        ),
        migrations.AddField(
            model_name='project',
            name='DFO_tenure',
            field=models.BooleanField(blank=True, default=True, null=True, verbose_name='DFO Tenure'),
        ),
        migrations.AddField(
            model_name='project',
            name='aquaculture_license_number',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Aquaculture License Number'),
        ),
        migrations.AddField(
            model_name='project',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='first_nations_contact', to='spot.person', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='project',
            name='contact_role',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Contact Role'),
        ),
        migrations.AddField(
            model_name='project',
            name='funding_recipient',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Funding Recipient'),
        ),
        migrations.AddField(
            model_name='project',
            name='other_species',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Are there any other species to add?'),
        ),
        migrations.AddField(
            model_name='project',
            name='water_license_number',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Water License Number'),
        ),
        migrations.AddField(
            model_name='reportoutcome',
            name='report_outcome_comment',
            field=models.TextField(blank=True, default=None, max_length=5000, null=True, verbose_name='Reporting Outcome Comment'),
        ),
        migrations.AddField(
            model_name='reportoutcome',
            name='reporting_outcome_metric',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Reporting Outcome Metric'),
        ),
        migrations.AddField(
            model_name='river',
            name='du',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='DU'),
        ),
        migrations.AddField(
            model_name='river',
            name='du_number',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='DU Number'),
        ),
        migrations.AddField(
            model_name='sampleoutcome',
            name='sample_outcome_comment',
            field=models.TextField(blank=True, default=None, max_length=5000, null=True, verbose_name='Sample Outcome Comment'),
        ),
        migrations.AlterField(
            model_name='data',
            name='sample_barrier',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='spot.samplebarrier', verbose_name='Barriers to Sample Collection and Data Entry?'),
        ),
        migrations.RemoveField(
            model_name='project',
            name='ecosystem_type',
        ),
        migrations.RemoveField(
            model_name='project',
            name='management_area',
        ),
        migrations.RemoveField(
            model_name='project',
            name='monitoring_approach',
        ),
        migrations.AddField(
            model_name='project',
            name='hatchery_name',
            field=models.ManyToManyField(blank=True, default=None, to='spot.HatcheryName', verbose_name='Hatchery Name'),
        ),
        migrations.AddField(
            model_name='project',
            name='ecosystem_type',
            field=models.ManyToManyField(blank=True, default=None, to='spot.EcosystemType', verbose_name='Eco System Type'),
        ),
        migrations.AddField(
            model_name='project',
            name='management_area',
            field=models.ManyToManyField(blank=True, to='spot.ManagementArea', verbose_name='Pacific Region Management Area'),
        ),
        migrations.AddField(
            model_name='project',
            name='monitoring_approach',
            field=models.ManyToManyField(blank=True, to='spot.MonitoringApproach', verbose_name='Monitoring Approach'),
        ),
    ]
